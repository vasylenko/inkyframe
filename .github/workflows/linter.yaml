name: Run Linters
on:
  pull_request:

env:
  FOO: "BAR"

jobs:
  tfsyntax:
    name: Validate and Format
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run terraform validate
        run: |
          terraform init -backend=false
          terraform validate -no-color

      - name: Run terraform fmt
        run: |
          terraform fmt -check -diff -recursive -no-color  

  tflint:
    name: TFlint
    runs-on: ubuntu-latest
    container: ghcr.io/terraform-linters/tflint:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cleanup tflint plugins with different architecture
        run: rm -rf infra/.tflint.d

      - name: Init linter
        run: tflint --init --chdir=infra

      - name: Run linter
        run: tflint --chdir=infra

  golint:
    name: Go Linters
    runs-on: ubuntu-latest
    strategy:
        matrix:
            functions: ["apigateway-authorizer", "calendar-backend"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.55.2

          # Optional: working directory, useful for monorepos
          working-directory: "backend-lambda-functions/${{ matrix.functions }}"

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"
